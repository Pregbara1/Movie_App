# Cinematch Movie App

**Author:** Sagbara Prinewill B  
**Version:** 1.0.0

Cinematch is a full-stack movie discovery and recommendation app. The backend is built with Node.js, Express, and PostgreSQL, providing authentication, user management, and integration with The Movie Database (TMDb) API. The frontend is built with React.

## Project Structure

- `/backend` — Express API, database, authentication
- `/frontend` — React app for user interface

PORT=5000
DB_USER=Sagbara Prinewill B
DB_HOST=localhost
DB_DATABASE=movie_app/cinematch
DB_PASSWORD=GlobalBoy
DB_PORT=5432
TMD_API_KEY=630dad1f6b0d23b97c87d5dff482c985 # Get this from themoviedb.org
JWT_SECRET=aVerySecretKeyThatYouShouldChangeAndMakeLonger
{
  "name": "cinematch-backend",
  "version": "1.0.0",
  "description": "Backend API for Cinematch movie app. Handles authentication, user management, and movie data.",
  "author": "Sagbara Prinewill B",
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js"
  },
  "dependencies": {
    // ...existing dependencies...
  }
}

## Backend–Database Interaction

The backend uses PostgreSQL for data storage. Connection details are set in the `.env` file:

- `DB_USER`, `DB_HOST`, `DB_DATABASE`, `DB_PASSWORD`, `DB_PORT`

## Frontend–Backend Communication

The frontend (React) communicates with the backend via RESTful API endpoints (e.g., `/api/register`, `/api/login`). Ensure both servers are running and use proxy settings in the frontend for API requests.

## File Structure

movie_app/
│
├── backend/
│   ├── index.js
│   ├── package.json
│   ├── .env
│   └── ... (other backend files)
│
├── frontend/
│   ├── package.json
│   └── ... (React app files)
│
└── README.md